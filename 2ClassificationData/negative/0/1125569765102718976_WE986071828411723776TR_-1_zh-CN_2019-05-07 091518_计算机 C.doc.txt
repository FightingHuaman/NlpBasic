个人陈述（计算机）

在UIC四年的本科学习让我坚定了对CS的热爱，也明确了未来想要深入钻研的方向：软件工程&编程语言。所以我计划在下一阶段赴美——计算机技术最发达、教育最系统的国家，攻读硕士学位。

在CS的学习中，每接触一个新理论时，我会去查看是否有人已进行过实践。如有，我会下载源码进行阅读，尝试自己再重新构建一遍，我也会做一点小实验来尝试自己的想法。Compared to my peers,对于program我有相对出色的理解能力，我擅长从抽象的角度去理解问题，也习惯从不同的层面来理解程序。从大一开始，我不断尝试不同语言和技术，每天固定分配时间学习新技能和新工具，积极到技术论坛参与讨论方法和技术分享会。鉴于这科学的学习方法，我总是系里最快、最先完成课程任务的，且连续三年保持Top3的成绩。此外，因为我非常热心帮助别人，同学们一般有课业上的问题，都会来问我；老师们有项目，第一个想到的也往往是我。这也使我在本科期间积累了丰富的实践经历。

在参与过的projects中，我基本上都是担任主力开发以及组长职责。 大三两学期，每学期我手头上基本都会同时兼顾5个项目。从系统层面的编程项目，如Linux Socket, 到工程类项目，如安卓订餐系统。从数值结算类项目基于matlab实现的大数计算器到图形学类项目Tango VR Game Picking matches。再到算法类的项目基于javascript的五子连珠网页游戏。每个项目的核心代码都是我写的，同时我还要兼顾文档的编写(包括Software Requirement Specification以及Software Design Specification)，项目的规划，以及流程的设计(UML)。这段经历非常磨炼，同时也让我收获颇丰。首先是如何更好地“安排”。不管是小组分工还是自己的时间，合理的安排，使我得以有序完成每一个project。其次是coding能力得到显著的提高。作为主开发人员，我需要对每个project的技术栈都有深入了解。为了掌握这些技术，我花费了很多时间在图书馆和机房上。第三是视野的提升。作为一个乐于且善于总结的人，在大量的coding下，我开始发现不同技术的共性，以及他们背后共同的设计思想。这种思想上的提升，对我的学习效率有着巨大的裨益。

在学习和实践之余，我乐于思考学科领域存在的难题，并积极寻找解决方法。譬如，在我感兴趣的软件工程方向，我认为目前最大的挑战是用户不断改变的性能和体验需求。比如在web 开发架构方面，用户对于性能的要求越来越大。这种趋势体现在目前很火爆的单页面应用上(Single Page application)。这种网页应用一般能达到本地 App 的效果，但这种应用也有着自己的劣势，比如构建这种应用的框架一般会占用比较多的内存。而且当前也并没有相关的成熟框架出现。目前，比较标准的解决方法是socket.io和Ajax。 我个人尝试过两种技术来构建App, 但是感觉在不同的场景下两者各有所长。比如socket.io虽然能够让构建实时应用非常简单而且稳定，但是其需要点对点的连接(1:1)，造成了后期扩展的问题。相比之下，如果使用Ajax技术，对于资源的需求量会小很多。但是Ajax在某些用例上比socket.io表现差很多。所以，在我看来这个方面还存在很多值得去讨论和实验的地方。我对于这两种技术的理解还仅仅局限于使用的层次，对于两者底层的实现并不是很了解，因此也不能够在相关方面形成自己的看法。我希望能够在未来更加深入的学习中，对这些技术有着更加深刻的理解，开发出能够有效解决这些问题的框架。

从性能方面来看，现在大部分的编译器都采用了类似 partial evaluation 或 Optimal strategies 来进行编译以期能够最大程度提升编译的效率和编译后代码的执行效率。这个方面目前不断有新的尝试和实验，编译器的效率也变得越来越高。而在”书写”方面，我认为现在的编程语言的表达能力正在变得越来越强，这是因为现代的编程语言帮程序员自动解决了越来越多的问题。比如现在大部分流行的原因都没有把内存问题(指针)交给程序员来解决。而且有些编程语言比如Ruby, 甚至能够让编程语言书写起来非常简洁而且直接，大大提升了阅读代码的效率和乐趣。在对于编译器执行效率的方向上，我对当前比较火热的JIT技术有一定的了解，但还没有做过和这个相关的个人项目。在语言设计的方面我也非常感兴趣，我FYP课题的方向就是基于Antlr4制作一个简单的类Ruby编译器，因为Ruby编程语言是一门号称能够让编程人员感到快乐的语言，因此我希望能够从制作这门语言的编译器中对其语法和底层的实现有更加深入的理解。目前我认为自己不足的地方在于接触这个领域的时间还不长，因此只对一些比较粗浅的理论和工具有一定的理解。当前自己的工作也都是集中在front-end方面，很多back-end方面的经典的理论都还没有学习。所以，我希望能够学习一些更加高级的语言设计方法，并且设计出更加符合我们人类自然思考方式，更加简单高效的编程语言。

总的来说，美国的计算机环境比中国更加自由，对于技术的态度也比中国更加包容，而且有非常多的高手，我非常希望可以在此进行深度的学习。我立志成为一名网络架构师或者编译器专家，所以我计划在研究生阶段深入学习编译器原理，操作系统，networking等课程，夯实专业基础，并通过参加学术研讨会接触、学习前沿技术，同时争取research机会，跟着技术大拿在实践中提升应用与创新能力。并积极思考目前行业的需求或者不足，大胆做出自己的尝试，争取突破性成果。

