6.2.2.3 Task generation 功能评估
依据Appendix E中 Section E.5的测试结果作者可以得出结论本系统中教授发布作业功能基本上是可以正常使用的, 但是有一些设计和程序上的缺陷具体细节如下:
1. 从实际角度来考虑教授可以将一个创建的作业发布给其所管理的多个班级, 但是本系统只允许选择一个班级进行作业发布
2. 评分规则制定的方式不合理, 可能会导致用户无法正确的体验本功能
3. 缺少严格的数据/文件过滤和检查以及可能出现的错误处理
Future work:
1. 从程序上实现创建的作业选择多个班级进行发布
2. 设计一个更加完善的作业创建机制比如在前端创建一个可以自动生成文件Java测试文件的程序, 教授只需要填写一些关键的测试方法, 系统将会为教授自动生成代码的测试文件无需教授自行上传, 对于评分标准的制定可以包含在教授创建测试文件的过程中.
3. 进行更加完善的前端或后端数据/文件的检查和过滤, 并对可能出现的errors进行合理的处理(例如：依据出现的参数错误返回准确的错误提示给前端).

6.2.2.4 Task submitting and automated test process功能评估
依据Appendix E中 Section E.6的测试结果以及Chapter 5.6.2中描述的这一功能的实现方法作者可以得出的结论是作业提交和代码自动化测试功可以正常运行但是提供的功能较为基础且有以下几点缺陷:
1. 与之前上传的文件在服务器处理方式一样, 作者只实现了简单的文件类型检测, 并没有更加严谨的检测和可能出现的错误处理
2. 学生作业的测试结果反馈不够全面, 只包含本次和历史最高的分数
3. 能够处理测试作业请求的数量有限因为作者只创建了一个Linux container, 如果涉及大量的并发请求可能会导致服务器瘫痪或client side 得到服务器响应的等待时间非常长

　Future work:
1.  在服务器完成新增完善的文件相关的检测以及审核机制
2.  实现更详细的作业反馈结果例如: 显示每道作业的详细得分/丢分原  因让学生能够清楚的知道需要改进的地方是什么
3. 进一步学习Node.JS concurrency control相关的知识或者深入学习一门其他可以处理高并发网络请求的服务器语言，尝试创建多个Linux container并通过服务器进行合理的并发控制.
　
　
6.2.2.5 Student's Grade review 功能评估
依据Appendix E中 Section E.7的测试结果以及Appendix C 中Section C.10和C.11的实际演示结果作者can conclude that, 此功能的实现以及展示比较贴近实际, 数据的演示效果也比较直观.
Future work:
1. 增添更多形式的前端可视化效果, 例如使用其他类型的graph来完成多功能的学生成绩相关的展示
2. 新增教授也可以使用此功能, 并且提供精确的条件筛选功能, 根据学生ID展示出这个学生的所有作业成绩， 展示两个不同的班级学生作业的成绩趋势等.
6.4 综合评估
整个项目基本上算是完成了当初所设立的primary objectives和sub-objectives，并且项目中实现的功能都可以稳定运行, 项目代码的结构比较清晰适合基于这个基础上进行二次开发, 缺点是某些功能实现的办法并不是很合理(比如自动化代码测试的步骤和实现方法),归结于作者的编程水平和相关的文章和技术内容了解有限, 某些部分的代码缺乏健壮性容易出现一些bugs甚至导致服务器崩溃例如在创建作业的过程中后台缺少相应的错误捕获和相应的错误的处理, 作者需要深度继续学习提高自己的编程水平和调查本项目相关的内容. 

Glossary
Term含义Front-end前端即网站前台部分，运行在PC端，移动端等浏览器上展现给用户浏览的网页,包括基本的HTML和CSS以及JavaScript/ajax等技术Back-end后端指的就是直接为浏览器端提供服务的服务器端，负责处理前端的请求与数据库等应用进行交互APIApplication Programming Interface: A collection of functions that provide access to capabilities of a piece of software or application. (请参照给出的英文重新改写以下)JDKJDK是 Java 语言的软件开发工具包，JDK是整个java开发的核心，它包含了JAVA的运行环境（JVM+Java系统类库）和JAVA工具Callback functionA method that returns a result upon conditions being met (请重写改写以下按照原意)Render页面渲染，就是浏览器将请求返回的页面资源（HTML文本，图像，动画，视频，音频等）基于一定的规则（CSS语句，JS语句，浏览器本身的一些规则等）完成页面布局及绘制的过程NPM
